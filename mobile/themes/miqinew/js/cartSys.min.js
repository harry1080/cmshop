!function (t) {
    function e(r) {
        if (a[r])return a[r].exports;
        var n = a[r] = {i: r, l: !1, exports: {}};
        return t[r].call(n.exports, n, n.exports, e), n.l = !0, n.exports
    }

    var a = {};
    e.m = t, e.c = a, e.d = function (t, a, r) {
        e.o(t, a) || Object.defineProperty(t, a, {configurable: !1, enumerable: !0, get: r})
    }, e.n = function (t) {
        var a = t && t.__esModule ? function () {
            return t.default
        } : function () {
            return t
        };
        return e.d(a, "a", a), a
    }, e.o = function (t, e) {
        return Object.prototype.hasOwnProperty.call(t, e)
    }, e.p = "/dist/", e(e.s = 0)
}([function (t, e, a) {
    "use strict";
    Object.defineProperty(e, "__esModule", {value: !0});
    var r = a(1), n = function (t) {
        return t && t.__esModule ? t : {default: t}
    }(r), i = {
        prdType: {PRODUCT: "1", BUNDLER: "2", EXTEND: "6", ACCIDENT: "7", SALE: "20"},
        PrdItemType: {PRODUCT: "S0", BUNDLER: "B", EXTEND: "S1", ACCIDENT: "S6", SALE: "20"},
        commonVariable: {SALEPORTAL: 2, SALECHANNEL: 1001, NEEDRESULTSET: 0}
    }, u = {
        INDEX_CART: "/newcart/shoppingCart.json?salePortal=" + i.commonVariable.SALEPORTAL + "&saleChannel=" + i.commonVariable.SALECHANNEL,
        MERGE_CART: "/newcart/cache2cart.json?salePortal=" + i.commonVariable.SALEPORTAL + "&saleChannel=" + i.commonVariable.SALECHANNEL,
        ADD_CART: "/newcart/add.json?salePortal=" + i.commonVariable.SALEPORTAL + "&saleChannel=" + i.commonVariable.SALECHANNEL,
        DEL_CART: "/newcart/del.json?salePortal=" + i.commonVariable.SALEPORTAL + "&saleChannel=" + i.commonVariable.SALECHANNEL,
        UPDATE_CART: "/newcart/update.json?salePortal=" + i.commonVariable.SALEPORTAL + "&saleChannel=" + i.commonVariable.SALECHANNEL,
        RECMND_CART: "/newcart/shoppingCart/getRecmndProducts.json?salePortal=" + i.commonVariable.SALEPORTAL + "&saleChannel=" + i.commonVariable.SALECHANNEL,
        CART_NUMBER: "/newcart/shoppingCart/number.json?salePortal=" + i.commonVariable.SALEPORTAL + "&saleChannel=" + i.commonVariable.SALECHANNEL
    }, o = {
        buildQueryData: function (t) {
            var e = [], a = [], r = [], n = [], u = [], o = [];
            return $.each(t, function (s, c) {
                switch (c.productType) {
                    case i.prdType.PRODUCT:
                        e.push(c.skuId), a.push(c.productType), r.push(c.quantity), n.push(""), u.push(c.skuId + ":" + c.quantity);
                        break;
                    case i.prdType.BUNDLER:
                        e.push(c.bundleId), a.push(c.productType), r.push(c.quantity), n.push(""), o.push(c.bundleId + ":" + c.quantity);
                        break;
                    case i.prdType.EXTEND:
                    case i.prdType.ACCIDENT:
                        e.push(c.skuId), a.push(c.productType), r.push(c.quantity), n.push(c.mainSkuId), $.each(t, function (t, e) {
                            if (e.skuId == c.mainSkuId)return u.push(c.skuId + ":" + e.quantity), !1
                        })
                }
            }), {
                sbs: e.join(","),
                types: a.join(","),
                qtys: r.join(","),
                ess: n.join(","),
                skuIdAndQtys: u.join(","),
                bundlerIdAndQtys: o.join(","),
                t: (new Date).getTime()
            }
        }, buildCartQueryData: function (t) {
            if (t) {
                var e = [];
                return $.each(t, function (t, a) {
                    var r = new cartSys.cartItemObj;
                    switch (a.productType) {
                        case i.prdType.PRODUCT:
                            r.itemId = a.skuId, r.itemType = i.PrdItemType.PRODUCT, r.qty = a.quantity, r.gifts = a.giftList;
                            break;
                        case i.prdType.BUNDLER:
                            r.itemId = a.bundleId, r.itemType = i.PrdItemType.BUNDLER, r.qty = a.quantity;
                            break;
                        case i.prdType.EXTEND:
                            r.itemId = a.skuId, r.itemType = i.PrdItemType.EXTEND, r.mainItemid = a.mainSkuId, r.qty = a.quantity;
                            break;
                        case i.prdType.ACCIDENT:
                            r.itemId = a.skuId, r.itemType = i.PrdItemType.ACCIDENT, r.mainItemid = a.mainSkuId, r.qty = a.quantity;
                            break;
                        case i.prdType.SALE:
                            r.itemId = a.skuId, r.itemType = i.PrdItemType.SALE, r.mainItemid = a.mainSkuId, r.qty = 1
                    }
                    e.push(r)
                }), this.convertToCart(e)
            }
            return {}
        }, buildAddCartQueryData: function (t, e) {
            if ("productDetail" === t) {
                var a = [];
                return $.each(e, function (t, e) {
                    var r = new cartSys.cartItemObj;
                    switch (e.productType) {
                        case i.prdType.PRODUCT:
                            r.itemId = e.skuId, r.itemType = i.PrdItemType.PRODUCT, r.qty = e.quantity, r.gifts = e.giftList;
                            break;
                        case i.prdType.BUNDLER:
                            r.itemId = e.bundleId, r.itemType = i.PrdItemType.BUNDLER, r.qty = e.quantity;
                            break;
                        case i.prdType.EXTEND:
                            r.itemId = e.skuId, r.itemType = i.PrdItemType.EXTEND, r.mainItemid = e.mainSkuId, r.qty = e.quantity;
                            break;
                        case i.prdType.ACCIDENT:
                            r.itemId = e.skuId, r.itemType = i.PrdItemType.ACCIDENT, r.mainItemid = e.mainSkuId, r.qty = e.quantity
                    }
                    a.push(r)
                }), {cartjson: (0, n.default)(a)}
            }
            return {cartjson: (0, n.default)(e)}
        }, buildUpdateQueryData: function (t) {
            var e = [];
            return $.each(t, function (t, a) {
                var r = new cartSys.cartItemObj;
                switch (String(a.productType)) {
                    case i.prdType.PRODUCT:
                        r.itemId = a.skuId, r.itemType = i.PrdItemType.PRODUCT, 3 != a.operation && (r.qty = a.quantity), r.gifts = a.giftList, r.operation = a.operation;
                        break;
                    case i.prdType.BUNDLER:
                        r.itemId = a.bundleId, r.itemType = i.PrdItemType.BUNDLER, 3 != a.operation && (r.qty = a.quantity), r.operation = a.operation;
                        break;
                    case i.prdType.EXTEND:
                        r.itemId = a.skuId, r.itemType = i.PrdItemType.EXTEND, r.mainItemid = a.mainSkuId, r.qty = a.quantity, r.operation = a.operation;
                        break;
                    case i.prdType.ACCIDENT:
                        r.itemId = a.skuId, r.itemType = i.PrdItemType.ACCIDENT, r.mainItemid = a.mainSkuId, r.qty = a.quantity, r.operation = a.operation;
                        break;
                    case i.prdType.SALE:
                        r.itemId = a.skuId, r.itemType = i.PrdItemType.SALE, r.mainItemid = a.mainSkuId, r.qty = 0, r.operation = a.operation
                }
                e.push(r)
            }), this.convertToCart(e)
        }, buildDelQueryData: function (t) {
        }, getJSONP: function (t) {
            if (cartSys.isEmpty(t) || cartSys.isEmpty(t.url) || !cartSys.isFunction(t.callback))return !1;
            var e = cartDomain + t.url + "&_t=" + (new Date).getTime() + "&callback=?";
            return $.ajax({
                url: e, dataType: "JSONP", timeout: 1e4, data: t.data, error: function (t, e) {
                    "timeout" == e ? ecWap.alert("请求超时，请稍后再试！") : ecWap.alert("系统异常，请稍后再试！")
                }, success: function (e) {
                    t.callback(e)
                }
            }), !0
        }, getJSONPHint: function (t) {
            if (cartSys.isEmpty(t) || cartSys.isEmpty(t.url) || !cartSys.isFunction(t.callback))return !1;
            var e = cartDomain + t.url + "&_t=" + (new Date).getTime() + "&callback=?";
            return $.ajax({
                url: e, dataType: "JSONP", timeout: 1e4, data: t.data, error: function (t, e) {
                }, success: function (e) {
                    "0" == e.retcode && t.callback(e)
                }
            }), !0
        }, convertToCart: function (t) {
            for (var e = [], a = [], r = [], n = [], i = [], u = [], o = 0; o < t.length; o++) {
                var s = t[o];
                if ("S0" == s.itemType) {
                    e.push(s.itemId), s.itemProp && s.itemProp.Internal_Purchase && "true" == s.itemProp.Internal_Purchase ? a.push(8) : a.push(1), r.push(s.qty), n.push("");
                    var c = [];
                    if (s.gifts && s.gifts.length > 0)for (var p = 0; p < s.gifts.length; p++)c.push(s.gifts[p].sbomCode);
                    i.push(c.join("-")), u.push(s.operation)
                }
                "S1" == s.itemType && (e.push(s.itemId), a.push(6), r.push(s.qty), n.push(s.mainItemid), i.push(""), u.push(s.operation)), "S6" == s.itemType && (e.push(s.itemId), a.push(7), r.push(s.qty), n.push(s.mainItemid), i.push(""), u.push(s.operation)), "B" == s.itemType && (e.push(s.itemId), s.itemProp && s.itemProp.Internal_Purchase && "true" == s.itemProp.Internal_Purchase ? a.push(9) : a.push(2), r.push(s.qty), n.push(""), i.push(""), u.push(s.operation)), "20" == s.itemType && (e.push(s.itemId), a.push(20), r.push(s.qty), n.push(s.mainItemid), i.push(""), u.push(s.operation))
            }
            var d = {};
            return d.sbs = e.join(","), d.types = a.join(","), d.qtys = r.join(","), d.ess = n.join(","), d.gfs = i.join(","), d.ops = u.join(","), d
        }
    };
    window.cartSys = {
        queryData: function (t) {
            return o.buildQueryData(t)
        }, index: function (t, e) {
            var a = {};
            a.url = u.INDEX_CART, a.data = o.buildCartQueryData(t), a.callback = function (t) {
                "0" == t.retcode && cartSys.isFunction(e) && e(t)
            }, o.getJSONP(a)
        }, add: function (t, e, a) {
            var r = {};
            r.url = u.ADD_CART, r.data = o.buildAddCartQueryData(t, e), r.callback = function (t) {
                "0" == t.retcode ? (ecWap.toast("添加商品成功"), cartSys.isFunction(a) && a(t)) : "TV0004" == t.retcode ? ecWap.alert("您购物车添加商品数量已达上限，请先结算部分商品哦") : ecWap.alert("系统异常，请稍后再试！")
            }, o.getJSONP(r)
        }, update: function (t, e) {
            var a = {};
            a.url = u.UPDATE_CART, cartSys.isEmpty(t) ? ecWap.alert("请选择您要修改的商品") : (a.data = o.buildUpdateQueryData(t), a.callback = function (t) {
                cartSys.isFunction(e) && "0" == t.retcode ? e(t) : "TV0004" == t.retcode ? ecWap.alert("您购物车添加商品数量已达上限，请先结算部分商品哦") : ecWap.alert("系统异常，请稍后再试！")
            }, o.getJSONP(a))
        }, del: function (t, e) {
            var a = {};
            if (a.url = u.DEL_CART, cartSys.isEmpty(t))return void ecWap.toast("请选择至少一件商品");
            a.callback = function (t) {
                cartSys.isFunction(e) && e(t)
            }, a.data = {cartjson: (0, n.default)(t)}, o.getJSONP(a)
        }, refresh: function (t) {
            window.location.reload()
        }, merge: function (t) {
            var e = {};
            e.url = u.MERGE_CART, e.callback = function (e) {
                cartSys.isFunction(t) && t(e)
            }, o.getJSONPHint(e)
        }, getCarPrdNum: function (t) {
            var e = {};
            e.url = u.CART_NUMBER, e.callback = function (e) {
                cartSys.isFunction(t) && t(e.cartNumber)
            }, o.getJSONPHint(e)
        }, getCarPrdNumAndSetCart: function () {
            if (cartSys.isEmpty(Utils.cookie.get("cartId")) && cartSys.isEmpty(Utils.cookie.get("uid")))return !1;
            cartSys.isEmpty(Utils.cookie.get("cartId")) || cartSys.isEmpty(Utils.cookie.get("uid")) ? cartSys.getCarPrdNum(function (t) {
                t > 99 ? $("#cartNum").html("99+").parent("em").addClass("show") : t > 0 && t <= 99 ? $("#cartNum").html(t).parent("em").addClass("show") : $("#cartNum").parent("em").removeClass("show")
            }) : cartSys.merge(function () {
                cartSys.getCarPrdNum(function (t) {
                    t > 99 ? $("#cartNum").html("99+").parent("em").addClass("show") : t > 0 && t <= 99 ? $("#cartNum").html(t).parent("em").addClass("show") : $("#cartNum").parent("em").removeClass("show")
                })
            })
        }, cartItemObj: function (t) {
            var e = {itemId: "", itemType: "", qty: "", gifts: [], mainItemid: "", operation: ""};
            return t && (e = $.extend(!0, {}, e, t)), {
                itemId: e.itemId,
                itemType: e.itemType,
                qty: e.qty,
                gifts: e.gifts,
                mainItemid: e.mainItemid,
                itemProp: e.itemProp,
                operation: e.operation
            }
        }, formatPrice: function (t) {
            t += "";
            var e = t.indexOf(".");
            if (e > 0) {
                return "00" == t.substring(e) ? parseInt(t.substring(0, e), 10) : parseFloat(t).toFixed(2)
            }
            return parseInt(t, 10)
        }, isFunction: function (t) {
            return "[object Function]" === Object.prototype.toString.call(t)
        }, isEmpty: function (t) {
            return "undefined" == t || null == t || "" == t || 0 == t.length
        }
    }, e.default = cartSys
}, function (t, e, a) {
    t.exports = {default: a(2), __esModule: !0}
}, function (t, e, a) {
    var r = a(3), n = r.JSON || (r.JSON = {stringify: JSON.stringify});
    t.exports = function (t) {
        return n.stringify.apply(n, arguments)
    }
}, function (t, e) {
    var a = t.exports = {version: "2.5.1"};
    "number" == typeof __e && (__e = a)
}]);