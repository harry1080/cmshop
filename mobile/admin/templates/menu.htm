<!DOCTYPE html>
<html lang="en">
<head>
    <title>菜单</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <link href="styles/general.css" rel="stylesheet" type="text/css"/>
    <script language="JavaScript">
        <!--
        var noHelp = "<p align='center' style='color: #666'>{$lang.no_help}</p>";
        var helpLang = "{$help_lang}";
        //-->
    </script>
</head>
<body>

<div id="main-div">
    <div id="menu-list">
        <ul id="menu-ul">
            {foreach from=$menus item=menu key=k name=foo}
            {if $menu.action}
            <li class="collapse ico_{$smarty.foreach.foo.iteration}" key_data1="lis ico_{$smarty.foreach.foo.iteration}"
                key_data2="lis ico2_{$smarty.foreach.foo.iteration}"><a href="{$menu.action}" target="main-frame">{$menu.label}</a>
            </li>
            {else}
            <li class="collapse lis ico_{$smarty.foreach.foo.iteration}" key="{$k}" name="menu"
                key_data1="lis ico_{$smarty.foreach.foo.iteration}"
                key_data2="lis ico2_{$smarty.foreach.foo.iteration}">
                {$menu.label}
                {if $menu.children}
                <ul style="display:none;">
                    {foreach from=$menu.children item=child}
                    <li class="menu-item"><a href="{$child.action}" target="main-frame">{$child.label}</a></li>
                    {/foreach}
                </ul>
                {/if}
            </li>
            {/if}
            {/foreach}
            <!--<script language="JavaScript" src="http://ecshop.ecmoban.com/menu_ext.php?charset={$charset}&lang={$help_lang}"></script>-->
        </ul>
    </div>
    <div id="help-div" style="display:none">
        <h1 id="help-title"></h1>

        <div id="help-content"></div>
    </div>
</div>
{insert_scripts files="../js/jquery-1.9.1.min.js,../js/jquery.json.js"}
{insert_scripts files="../js/global.js,../js/utils.js,../js/transport_jquery.js"}
<script language="JavaScript">
    <!--
    var collapse_all = "{$lang.collapse_all}";
    var expand_all = "{$lang.expand_all}";
    var collapse = true;
    var getClass = function (name) {
        var ele = document.getElementById("menu-ul").getElementsByTagName("li"), arr = [];
        var reg = new RegExp("(^|\\s)" + name + "(\\s|$)");
        for (var i = 0; i < ele.length; i++) {
            if (reg.test(ele[i].className)) {
                arr.push(ele[i]);
            }
        }
        return arr;

    }

    function toggleCollapse() {
        var items = document.getElementsByTagName('LI');
        var span = document.getElementById('menu-ul').getElementsByTagName("span");
        for (i = 0; i < items.length; i++) {
            if (collapse) {
                if (items[i].className == "explode") {
                    toggleCollapseExpand(items[i], "collapse");
                }
            }
            else {
                if (items[i].className == "collapse") {
                    toggleCollapseExpand(items[i], "explode");
                    ToggleHanlder.Reset();
                }
            }
        }

        collapse = !collapse;
        var toggleImg = document.getElementById('toggleImg');
        if (toggleImg) {
            toggleImg.src = collapse ? 'images/menu_minus.gif' : 'images/menu_plus.gif';
            toggleImg.alt = collapse ? collapse_all : expand_all;
        }
    }


    function toggleCollapseExpand(obj, status) {
        var lis = getClass("lis");
        var explode = getClass("explode");
        var ie = /ie 7/i.test(navigator.userAgent), dis = null;
        var ul = document.getElementById("menu-ul").getElementsByTagName("ul");


        if (obj.tagName.toLowerCase() == 'li' && obj.className != 'menu-item') {
            for (i = 0; i < obj.childNodes.length; i++) {
                if (obj.childNodes[i].tagName == "UL") {
                    if (status == null) {
                        if (ie) {
                            dis = obj.childNodes[1].style.display;
                        } else {
                            dis = obj.childNodes[1].style.display;
                        }
                        if (dis != "none") {

                            for (var j = 0; j < ul.length; j++) {
                                ul[j].style["display"] = "none";

                            }

                            if (ie) {
                                obj.childNodes[1].style.display = "none";
                            } else {
                                obj.childNodes[1].style.display = "none";
                            }


                            ToggleHanlder.RecordState(obj.getAttribute("key"), "collapse");
                            var s = obj.getAttribute("key_data1");

                            obj.className = "collapse " + s;
                        }
                        else {

                            for (var j = 0; j < ul.length; j++) {
                                ul[j].style["display"] = "none";
                            }

                            if (ie) {
                                obj.childNodes[1].style.display = "block";
                            } else {
                                obj.childNodes[1].style.display = "block";
                            }
                            for (var i = 0; i < lis.length; i++) {
                                var tmp = lis[i].getAttribute("key_data1");
                                lis[i].className = "collapse " + tmp;
                            }
                            ToggleHanlder.RecordState(obj.getAttribute("key"), "explode");
                            var s = obj.getAttribute("key_data2");

                            obj.className = "explode " + s;
                        }
                        break;
                    }
                    else {
                        if (status == "collapse") {
                            ToggleHanlder.RecordState(obj.getAttribute("key"), "collapse");
                            var s = obj.getAttribute("key_data1");

                            obj.className = "collapse " + s;
                        }
                        else {
                            ToggleHanlder.RecordState(obj.getAttribute("key"), "explode");
                            var s = obj.getAttribute("key_data2");

                            obj.className = "explode " + s;
                        }
                        if (ie) {
                            obj.childNodes[1].style.display = (status == "explode") ? "block" : "none";
                        } else {
                            obj.childNodes[1].style.display = (status == "explode") ? "block" : "none";
                        }

                    }
                }
            }
        }
    }

    document.getElementById('menu-list').onclick = function (e) {
        var obj = Utils.srcElement(e);
        toggleCollapseExpand(obj);
        var target = e.target;
        if (target.nodeName == "A") {
            var menu_a = document.getElementById('menu-list').getElementsByTagName("a");
            var alength = menu_a.length;
            for (var i = 0; i < alength; i++) {
                removeClass(menu_a[i], "on");
            }
            addClass(target, "on");
        }
    }
    //原生js  addClass,hasClass,removeClass
    function addClass(obj, cls) {
        if (!this.hasClass(obj, cls)) obj.className += " " + cls;
    }
    function hasClass(obj, cls) {
        return obj.className.match(new RegExp('(\\s|^)' + cls + '(\\s|$)'));
    }
    function removeClass(obj, cls) {
        if (hasClass(obj, cls)) {
            var reg = new RegExp('(\\s|^)' + cls + '(\\s|$)');
            obj.className = obj.className.replace(reg, ' ');
        }
    }



    /**
     * 创建XML对象
     */
    function createDocument() {
        var xmlDoc;

        // create a DOM object
        if (window.ActiveXObject) {
            try {
                xmlDoc = new ActiveXObject("Msxml2.DOMDocument.6.0");
            }
            catch (e) {
                try {
                    xmlDoc = new ActiveXObject("Msxml2.DOMDocument.5.0");
                }
                catch (e) {
                    try {
                        xmlDoc = new ActiveXObject("Msxml2.DOMDocument.4.0");
                    }
                    catch (e) {
                        try {
                            xmlDoc = new ActiveXObject("Msxml2.DOMDocument.3.0");
                        }
                        catch (e) {
                            alert(e.message);
                        }
                    }
                }
            }
        }
        else {
            if (document.implementation && document.implementation.createDocument) {
                xmlDoc = document.implementation.createDocument("", "doc", null);
            }
            else {
                alert("Create XML object is failed.");
            }
        }
        xmlDoc.async = false;

        return xmlDoc;
    }

    //菜单展合状态处理器
    var ToggleHanlder = new Object();

    Object.extend(ToggleHanlder, {
        SourceObject: new Object(),
        CookieName: 'Toggle_State',
        RecordState: function (name, state) {
            if (state == "collapse") {
                this.SourceObject[name] = state;
            }
            else {
                if (this.SourceObject[name]) {
                    delete(this.SourceObject[name]);
                }
            }
            var date = new Date();
            date.setTime(date.getTime() + 99999999);
            document.setCookie(this.CookieName, $.toJSON(this.SourceObject), date.toGMTString());
        },

        Reset: function () {
            var date = new Date();
            date.setTime(date.getTime() + 99999999);
            document.setCookie(this.CookieName, "{}", date.toGMTString());
        },

        Load: function () {
            if (document.getCookie(this.CookieName) != null) {
                //this.SourceObject = t_eval();
                var items = document.getElementsByTagName('LI');
                for (var i = 0; i < items.length; i++) {
                    if (items[0].getAttribute("name") == "menu" && items[0].getAttribute("id") != '20_yun') {
                        for (var k in this.SourceObject) {
                            if (typeof(items[i]) == "object") {
                                if (items[i].getAttribute('key') == k) {
                                    toggleCollapseExpand(items[i], this.SourceObject[k]);
                                    collapse = false;
                                }
                            }
                        }
                    }
                }
            }
            var toggleImg = document.getElementById('toggleImg');
            if (toggleImg) {
                toggleImg.src = collapse ? 'images/menu_minus.gif' : 'images/menu_plus.gif';
                toggleImg.alt = collapse ? collapse_all : expand_all;
            }
        }
    });
    ToggleHanlder.CookieName += "_{$admin_id}";
    //初始化菜单状态
    ToggleHanlder.Load();


</script>

</body>
</html>